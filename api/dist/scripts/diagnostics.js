"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("../config/envLoader");
const db_1 = __importDefault(require("../db"));
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
async function runDiagnostics() {
    console.log('--- INICIANDO DIAGN√ìSTICO DO AMBIENTE ---');
    let hasError = false;
    try {
        const timeResult = await db_1.default.query('SELECT NOW()');
        console.log('‚úÖ [DB] Conex√£o com o banco de dados bem-sucedida.');
        console.log(`   - Hor√°rio do Servidor de DB: ${timeResult.rows[0].now}`);
    }
    catch (error) {
        console.error('‚ùå [DB] FALHA na conex√£o com o banco de dados.');
        console.error(`   - Erro: ${error.message}`);
        hasError = true;
    }
    const jwtSecret = process.env.JWT_SECRET;
    if (jwtSecret && jwtSecret.length > 10) {
        console.log('‚úÖ [ENV] Vari√°vel JWT_SECRET est√° presente e tem um tamanho razo√°vel.');
        try {
            const testPayload = { id: 1, role: 'admin' };
            const token = jsonwebtoken_1.default.sign(testPayload, jwtSecret, { expiresIn: '1s' });
            jsonwebtoken_1.default.verify(token, jwtSecret);
            console.log('‚úÖ [JWT] Gera√ß√£o e verifica√ß√£o de token funcionando corretamente.');
        }
        catch (error) {
            console.error('‚ùå [JWT] FALHA ao gerar ou verificar token JWT.');
            console.error(`   - Erro: ${error.message}`);
            hasError = true;
        }
    }
    else {
        console.error('‚ùå [ENV] FALHA: A vari√°vel JWT_SECRET n√£o est√° definida ou √© muito curta.');
        hasError = true;
    }
    console.log('--- DIAGN√ìSTICO CONCLU√çDO ---');
    if (hasError) {
        console.error('\nüî¥ O diagn√≥stico encontrou um ou mais erros cr√≠ticos. O deploy pode falhar.');
        process.exit(1);
    }
    else {
        console.log('\nüü¢ Diagn√≥stico conclu√≠do com sucesso. O ambiente parece saud√°vel.');
        process.exit(0);
    }
}
runDiagnostics();
